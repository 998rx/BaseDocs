import{_ as n,c as a,a as s,o as d}from"./app-kLoU3Sxi.js";const e={};function o(l,t){return d(),a("div",null,t[0]||(t[0]=[s(`<h2 id="flytable-表格组件" tabindex="-1"><a class="header-anchor" href="#flytable-表格组件"><span>FLYTable 表格组件</span></a></h2><p>对 <code>element-plus</code> 的 <code>el-table</code> 组件进行封装，只需传入 <code>columns</code> 与 <code>data</code> 参数，即可渲染出响应的表格出来。</p><p>FLYTable 组件位于 /packages/FLYTable</p><h3 id="基础用法" tabindex="-1"><a class="header-anchor" href="#基础用法"><span>基础用法</span></a></h3><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue"><pre><code class="language-vue"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;author&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;author&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title1&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;author1&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title2&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;author2&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;title3&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;author3&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FLYTable</span> <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FLYTable</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flytable-属性" tabindex="-1"><a class="header-anchor" href="#flytable-属性"><span>FLYTable 属性</span></a></h3><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>columns</td><td>表头结构，<a href="#Columns">详见</a></td><td><code>TableColumn[]</code></td><td>-</td><td>[]</td></tr><tr><td>data</td><td>表格数据</td><td><code>Recordable[]</code></td><td>-</td><td>[]</td></tr><tr><td>loading</td><td>加载状态,当 loading 值为 true 时，表格会显示一个加载中的状态；当 loading 值为 false 时，表格会显示数据内容。</td><td><code>boolean</code></td><td><code>true、false</code></td><td>false</td></tr><tr><td>border</td><td>是否带有纵向边框</td><td><code>number</code></td><td><code>true、false</code></td><td>1</td></tr><tr><td>maxHeight</td><td>table 的最大高度</td><td><code>number</code></td><td>-</td><td>600</td></tr><tr><td>objectSpanMethod</td><td>合并行或列的计算方法</td><td><code>Function</code></td><td>-</td><td>-</td></tr><tr><td>rowClass</td><td>表头单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有表头单元格设置一样的 Style</td><td><code>Function/Object</code></td><td>-</td><td>-</td></tr><tr><td>highlightRow</td><td>是否要高亮当前行</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>getRowKeys</td><td>行数据的 Key，用来优化 Table 的渲染</td><td><code>string</code></td><td>-</td><td>id</td></tr><tr><td>getExpandRowKeys</td><td>可以通过该属性设置 Table 目前的展开行，需要设置 row-key 属性才能使用，该属性为展开行的 keys 数组。</td><td><code>array</code></td><td>-</td><td>[]</td></tr><tr><td>stripe</td><td>是否为斑马纹</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>align</td><td>内容对齐方式</td><td><code>string</code></td><td><code>left</code>/<code>center</code>/<code>right</code></td><td>left</td></tr><tr><td>headerAlign</td><td>表头对齐方式</td><td><code>string</code></td><td><code>left</code>/<code>center</code>/<code>right</code></td><td>left</td></tr><tr><td>isAction</td><td>是否显示表格操作</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>action</td><td>操作列表头名称</td><td><code>string</code></td><td>-</td><td>操作</td></tr><tr><td>operationWidth</td><td>操作列宽度</td><td><code>string/number</code></td><td>-</td><td>-</td></tr><tr><td>showIndex</td><td>是否展示序号列</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>indexFixed</td><td>是否固定序号列</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>showCheckbox</td><td>是否展示多选框列</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>lookBtn</td><td>是否显示查看按钮（isAction为true时）</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>editBtnIcon</td><td>是否显示编辑图标（isAction为true时）</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>lookBtnIcon</td><td>是否显示查看图标（isAction为true时）</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>deleteBtnIcon</td><td>是否显示删除图标（isAction为true时）</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>editBtn</td><td>是否显示编辑按钮（isAction为true时）</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>deleteBtn</td><td>是否显示删除按钮（isAction为true时）</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>editText</td><td>自定义编辑按钮文字</td><td><code>string</code></td><td>-</td><td>编辑</td></tr><tr><td>deleteBtnText</td><td>自定义删除按钮文字</td><td><code>string</code></td><td>-</td><td>删除</td></tr><tr><td>detailBtn</td><td>是否显示详情按钮（isAction为true时）</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>deleteBtnPopout</td><td>是否显示删除按钮（isAction为true时）</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>dynamicShow</td><td>是否自定义操作列按钮</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>dynamicBtnName</td><td>操作列按钮动态数组</td><td><code>array</code></td><td>-</td><td>[]</td></tr><tr><td>lookText</td><td>自定义查看按钮文字</td><td><code>string</code></td><td>-</td><td>查看</td></tr></tbody></table><h3 id="columns" tabindex="-1"><a class="header-anchor" href="#columns"><span>Columns<span id="Columns"></span></span></a></h3><p>除了以下属性，还支持 <code>element-plus</code> 的 <code>TableColumn</code> 属性。</p><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>prop</td><td>唯一值，如需展示正确的数据，需要与 data 中的属性名对应</td><td><code>string</code></td><td>-</td><td>-</td></tr><tr><td>label</td><td>表头名称</td><td><code>string</code></td><td>-</td><td>-</td></tr><tr><td>sortable</td><td>对应列是否可以排序， 如果设置为 &#39;custom&#39;，则代表用户希望远程排序，需要监听 Table 的 sort-change 事件</td><td><code>boolean/string</code></td><td>-</td><td>-</td></tr><tr><td>width</td><td>对应列的宽度</td><td><code>string/number</code></td><td>-</td><td>-</td></tr><tr><td>min-width</td><td>对应列的最小宽度， 对应列的最小宽度， 与 width 的区别是 width 是固定的，min-width 会把剩余宽度按比例分配给设置了 min-width 的列</td><td><code>string/number</code></td><td>-</td><td>-</td></tr><tr><td>filters</td><td>数据过滤的选项， 数组格式，数组中的元素需要有 text 和 value 属性。 数组中的每个元素都需要有 text 和 value 属性。</td><td><code>Array&lt;{text: string, value: string}&gt;</code></td><td>-</td><td>-</td></tr><tr><td>filter-method</td><td>数据过滤使用的方法</td><td><code>function</code></td><td>-</td><td>(value: any, row: any, column: any) =&gt; void</td></tr><tr><td>align</td><td>对齐方式</td><td><code>enum</code></td><td>left、center、right</td><td>left</td></tr><tr><td>fixed</td><td>列是否固定在左侧或者右侧。 true 表示固定在左侧</td><td><code>enum/boolean</code></td><td>-</td><td>false</td></tr><tr><td>isTemplate</td><td>是否支持自定列的内容</td><td><code>boolean</code></td><td>-</td><td>false</td></tr></tbody></table><h3 id="flytable-方法" tabindex="-1"><a class="header-anchor" href="#flytable-方法"><span>FLYTable 方法</span></a></h3><table><thead><tr><th>方法名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>on-current-change</td><td>当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的 highlight-current-row 属性</td><td>(currentRow: any, oldCurrentRow: any) =&gt; void</td></tr><tr><td>on-select</td><td>当用户手动勾选数据行的 Checkbox 时触发的事件</td><td>&lt;T = any&gt;(selection: T[], row: T) =&gt; void</td></tr><tr><td>on-select-cancel</td><td>当用户手动取消勾选数据行的 Checkbox 时触发的事件</td><td>&lt;T = any&gt;(selection: T[], row: T) =&gt; void</td></tr><tr><td>on-select-all</td><td>当用户手动勾选全选 Checkbox 时触发的事件</td><td>(selection: any[]) =&gt; void</td></tr><tr><td>on-selection-change</td><td>当选择项发生变化时会触发该事件</td><td>(newSelection: any[]) =&gt; void</td></tr><tr><td>on-sort-change</td><td>当表格的排序条件发生变化的时候会触发该事件</td><td>(data: {column: any, prop: string, order: any }) =&gt; void</td></tr><tr><td>on-row-click</td><td>当某一行被点击时会触发该事件</td><td>(row: any, column: any, event: Event) =&gt; void</td></tr><tr><td>on-row-dblclick</td><td>当某一行被双击时会触发该事件</td><td>(row: any, column: any, event: Event) =&gt; void</td></tr><tr><td>cellClick</td><td>当某个单元格被点击时会触发该事件</td><td>(row: any, column: any, cell: HTMLTableCellElement, event: Event) =&gt; void</td></tr><tr><td>expandChange</td><td>当用户对某一行展开或者关闭的时候会触发该事件（展开行时，回调的第二个参数为 expandedRows；树形表格时第二参数为 expanded）</td><td>(row: any, expandedRows: any[]) =&gt; void &amp; (row: any, expanded: boolean) =&gt; void</td></tr><tr><td>on-row-dblclick</td><td>当某一行被双击时会触发该事件</td><td>(row: any, column: any, event: Event) =&gt; void</td></tr></tbody></table><h3 id="flytable-插槽" tabindex="-1"><a class="header-anchor" href="#flytable-插槽"><span>FLYTable 插槽</span></a></h3><table><thead><tr><th>插槽名</th><th>说明</th><th>子标签</th></tr></thead><tbody><tr><td>prop</td><td>对于每一列，当isTemplate为true时，可以通过插槽来自定义该列的内容。</td><td>prop</td></tr><tr><td>action</td><td>当isAction为true时，可以通过插槽来自定义操作列的内容</td><td>action</td></tr></tbody></table>`,14)]))}const p=n(e,[["render",o]]),r=JSON.parse('{"path":"/componentDocs/FlyTable.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1756561415000,"contributors":[{"name":"zrx","username":"zrx","email":"ruixiang0430@126.com","commits":1,"url":"https://github.com/zrx"}],"changelog":[{"hash":"40d2c514e474f23bfb56550b29cbd9fa5ceedb89","time":1756561415000,"email":"ruixiang0430@126.com","author":"zrx","message":"feat: modified"}]},"filePathRelative":"componentDocs/FlyTable.md"}');export{p as comp,r as data};
